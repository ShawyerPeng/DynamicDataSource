<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

    <!-- 1. 使用 spring 组件扫描 -->
    <context:component-scan base-package="controller"/>

    <!-- 2. 通过 annotation-driven 可以替代下边的处理器映射器和适配器 -->
    <!--<mvc:annotation-driven/>-->
    <mvc:annotation-driven conversion-service="myConversionService"/>
    <mvc:default-servlet-handler/>

    <!--============================================ 转换器  ====================================================== -->
    <!--id不要写成"conversionService"，因为这样会覆盖原来的。详见http://blog.csdn.net/u012345283/article/details/43835763-->
    <bean id="myConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 转换器  -->
        <property name="converters">
            <set>
                <bean class="converter.CustomDateConverter"/>
            </set>
        </property>
    </bean>

    <!-- 定义统一异常处理  抛出异常要进行的处理  这里与 spring 的异常处理只能二选一 -->
    <!--<bean id="myException" class="com.hh.Exception.MyExceptionHandler"/>-->
    <!--============================================ 对异常进行处理 ===========================================-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为 exception -->
        <property name="exceptionAttribute" value="ex"/>
        <!-- 定义需要特殊处理的异常，用类名或完全路径名作为 key，异常也页名作为值 -->
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.NullPointerException">err</prop>
                <prop key="exception.CustomException">err</prop>
                <prop key="org.apache.shiro.authz.UnauthorizedException">refuse
                </prop><!--refush 是页面  springmvc 扫描的是 pags/jsp 下 **.jsp 的页面 -->
                <!-- 这里还可以继续扩展对不同异常类型的处理 -->
            </props>
        </property>
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
        <property name="warnLogCategory" value="WARN"/>
        <!-- 默认错误页面，当找不到上面 mappings 中指定的异常对应视图时，使用本默认配置 -->
        <property name="defaultErrorView" value="err"/>
        <!-- 默认 HTTP 状态码 -->
        <property name="defaultStatusCode" value="500"/>
    </bean>


    <!--======================================== 静态资源 ==============================================-->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/images/**" location="/images/"/><!-- 访问 images.xxx 的时候从 /images/ 路径下面获得数据 -->


    <!-- 3. 配置视图解析器 ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- ======================================== 文件上传 ======================================================== -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为 5MB -->
        <property name="maxUploadSize" value="5242880"/>
    </bean>

</beans>